{
  "contractName": "ERC20Tornado",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(bytes32)\":{\"details\":\"Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.\",\"params\":{\"_commitment\":\"the note commitment, which is PedersenHash(nullifier + secret)\"}},\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)\":{\"details\":\"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/ERC20Tornado.sol\":\"ERC20Tornado\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/ERC20Tornado.sol\":{\"keccak256\":\"0x500600828f071e053883a06ea8de27f12699d615bfd34452e9777d55bdb3fcf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b727f7a21dba9ef7a3861d8dce17c4914b179102e3cfe04d748127e8d5a7b6ae\",\"dweb:/ipfs/QmZsEePAZXLTpd8K7ZtjcsDxF6jaDexf2UosxbmkQuTp4w\"]},\"/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0xfe7b4307876bc6ec8cf7b1598977d49e4ace5a0dd8d39b908a113dc21be0b3bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b67f28d13afd29704e797242c7fea4e20e6a407ead8dd1b4fa955d9189a501b\",\"dweb:/ipfs/QmQtYhDm1d13QGntcPssd7Vet1YpZcGHN8u8XFKzZw627z\"]},\"/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/Tornado.sol\":{\"keccak256\":\"0x2284907da64e2c42a8c68a4be0c66f389eee55a4b9330d224721902d97108f2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1a401b782273dcbc85fcedc01e913802b6a9cd5978073db0011a97a760496ba\",\"dweb:/ipfs/QmVhLjAnXVjVFaWG4ohux3eAHg71cPar2uPFFhB5hoipc9\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
  "bytecode": "0x610120604052600280546001600160401b03191690553480156200002257600080fd5b50604051620026e8380380620026e8833981810160405260a08110156200004857600080fd5b5080516020820151604083015160608401516080909401519293919290919084848484808363ffffffff8216620000b15760405162461bcd60e51b8152600401808060200182810382526023815260200180620026c56023913960400191505060405180910390fd5b60208263ffffffff16106200010d576040805162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604482015290519081900360640190fd5b6001600160e01b031960e083901b1660a0526001600160601b0319606082901b1660805260005b8263ffffffff168163ffffffff16101562000179576200015a63ffffffff821662000233565b63ffffffff821660009081526020819052604090205560010162000134565b506200018f63ffffffff60001984011662000233565b60008052600160208190527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4991909155600355505081620002025760405162461bcd60e51b8152600401808060200182810382526025815260200180620026a06025913960400191505060405180910390fd5b506001600160601b0319606093841b811660c05260e0919091529290911b9091166101005250620008c19350505050565b6000816200026357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c620008bc565b81600114156200029557507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d620008bc565b8160021415620002c757507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200620008bc565b8160031415620002f957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb620008bc565b81600414156200032b57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9620008bc565b81600514156200035d57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959620008bc565b81600614156200038f57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c620008bc565b8160071415620003c157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4620008bc565b8160081415620003f357507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80620008bc565b81600914156200042457507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007620008bc565b81600a14156200045657507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30620008bc565b81600b14156200048857507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5620008bc565b81600c1415620004ba57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f620008bc565b81600d1415620004ec57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd620008bc565b81600e14156200051e57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108620008bc565b81600f14156200055057507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6620008bc565b81601014156200058257507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854620008bc565b8160111415620005b457507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea620008bc565b8160121415620005e657507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d620008bc565b81601314156200061857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05620008bc565b81601414156200064a57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4620008bc565b81601514156200067c57507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967620008bc565b8160161415620006ae57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453620008bc565b8160171415620006e057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48620008bc565b81601814156200071257507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1620008bc565b81601914156200074457507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c620008bc565b81601a14156200077657507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99620008bc565b81601b1415620007a857507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354620008bc565b81601c1415620007d957507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d620008bc565b81601d14156200080b57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427620008bc565b81601e14156200083d57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb620008bc565b81601f14156200086f57507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc620008bc565b6040805162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604482015290519081900360640190fd5b919050565b60805160601c60a05160e01c60c05160601c60e0516101005160601c611d616200093f600039806114855280611505528061156252806118255250806105d852806109e75280611528528061184952508061070b528061090652508061093c528061164152806116ad52508061144f52806117395250611d616000f3fe6080604052600436106101355760003560e01c8063b214faa5116100ab578063e82955881161006f578063e8295588146104bc578063ec732959146104e6578063ed33639f146104fb578063f178e47c14610510578063fc0c546a1461053a578063fc7e9c6f1461054f57610135565b8063b214faa514610421578063ba70f7571461043e578063c2b40ae414610453578063cd87a3b41461047d578063e5285dcc1461049257610135565b80636d9833e3116100fd5780636d9833e314610299578063839df945146102c35780638bca6d16146102ed5780638ea3099e1461030257806390eeb02b146103415780639fa12d0b1461035657610135565b806317cc915c1461013a57806321a0adb6146101785780632b7ac3f314610213578063414a37ba146102445780634ecf518b1461026b575b600080fd5b34801561014657600080fd5b506101646004803603602081101561015d57600080fd5b5035610564565b604080519115158252519081900360200190f35b610211600480360360e081101561018e57600080fd5b810190602081018135600160201b8111156101a857600080fd5b8201836020820111156101ba57600080fd5b803590602001918460018302840111600160201b831117156101db57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a00135610579565b005b34801561021f57600080fd5b50610228610904565b604080516001600160a01b039092168252519081900360200190f35b34801561025057600080fd5b50610259610928565b60408051918252519081900360200190f35b34801561027757600080fd5b5061028061093a565b6040805163ffffffff9092168252519081900360200190f35b3480156102a557600080fd5b50610164600480360360208110156102bc57600080fd5b503561095e565b3480156102cf57600080fd5b50610164600480360360208110156102e657600080fd5b50356109d0565b3480156102f957600080fd5b506102596109e5565b34801561030e57600080fd5b506102596004803603606081101561032557600080fd5b506001600160a01b038135169060208101359060400135610a09565b34801561034d57600080fd5b50610280610bd7565b34801561036257600080fd5b506103d16004803603602081101561037957600080fd5b810190602081018135600160201b81111561039357600080fd5b8201836020820111156103a557600080fd5b803590602001918460208302840111600160201b831117156103c657600080fd5b509092509050610be3565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561040d5781810151838201526020016103f5565b505050509050019250505060405180910390f35b6102116004803603602081101561043757600080fd5b5035610c82565b34801561044a57600080fd5b50610259610da3565b34801561045f57600080fd5b506102596004803603602081101561047657600080fd5b5035610dbe565b34801561048957600080fd5b50610280610dd0565b34801561049e57600080fd5b50610164600480360360208110156104b557600080fd5b5035610dd5565b3480156104c857600080fd5b50610259600480360360208110156104df57600080fd5b5035610dea565b3480156104f257600080fd5b50610259611429565b34801561050757600080fd5b5061022861144d565b34801561051c57600080fd5b506102596004803603602081101561053357600080fd5b5035611471565b34801561054657600080fd5b50610228611483565b34801561055b57600080fd5b506102806114a7565b60046020526000908152604090205460ff1681565b600260035414156105d1576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026003557f000000000000000000000000000000000000000000000000000000000000000082111561064b576040805162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c7565000000000000604482015290519081900360640190fd5b60008581526004602052604090205460ff16156106af576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6106b88661095e565b610709576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663695ef6f989896040518060c001604052808b60001c81526020018a60001c8152602001896001600160a01b03168152602001886001600160a01b03168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b838110156107ba5781810151838201526020016107a2565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b505050506040513d602081101561083657600080fd5b5051610882576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6000858152600460205260409020805460ff191660011790556108a7848484846114ba565b604080516001600160a01b038681168252602082018890528183018590529151918516917fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c349319181900360600190a250506001600355505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080516020611c6183398151915281565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008161096d575060006109cb565b60025463ffffffff16805b63ffffffff81166000908152600160205260409020548414156109a0576001925050506109cb565b63ffffffff81166109af5750601e5b6000190163ffffffff8082169083161415610978576000925050505b919050565b60056020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600080516020611c618339815191528310610a6d576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020611c618339815191528210610ab95760405162461bcd60e51b8152600401808060200182810382526021815260200180611c406021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b158015610b0857600080fd5b505afa158015610b1c573d6000803e3d6000fd5b505050506040513d6040811015610b3257600080fd5b5080516020909101519092509050600080516020611c618339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610b9f57600080fd5b505afa158015610bb3573d6000803e3d6000fd5b505050506040513d6040811015610bc957600080fd5b5051925050505b9392505050565b60025463ffffffff1681565b60608167ffffffffffffffff81118015610bfc57600080fd5b50604051908082528060200260200182016040528015610c26578160200160208202803683370190505b50905060005b82811015610c7b57610c4f848483818110610c4357fe5b90506020020135610dd5565b15610c73576001828281518110610c6257fe5b911515602092830291909101909101525b600101610c2c565b5092915050565b60026003541415610cda576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260035560008181526005602052604090205460ff1615610d2d5760405162461bcd60e51b8152600401808060200182810382526021815260200180611c816021913960400191505060405180910390fd5b6000610d3882611628565b6000838152600560205260409020805460ff191660011790559050610d5b6117db565b6040805163ffffffff83168152426020820152815184927fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196928290030190a250506001600355565b60025463ffffffff1660009081526001602052604090205490565b60016020526000908152604090205481565b601e81565b60009081526004602052604090205460ff1690565b600081610e1857507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6109cb565b8160011415610e4857507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d6109cb565b8160021415610e7857507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c2006109cb565b8160031415610ea857507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb6109cb565b8160041415610ed857507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c96109cb565b8160051415610f0857507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb549596109cb565b8160061415610f3857507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c6109cb565b8160071415610f6857507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb46109cb565b8160081415610f9857507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff806109cb565b8160091415610fc757507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c0076109cb565b81600a1415610ff757507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e306109cb565b81600b141561102757507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e56109cb565b81600c141561105757507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f6109cb565b81600d141561108757507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd6109cb565b81600e14156110b757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb1086109cb565b81600f14156110e757507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b66109cb565b816010141561111757507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db618546109cb565b816011141561114757507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea6109cb565b816012141561117757507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d6109cb565b81601314156111a757507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc056109cb565b81601414156111d757507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d46109cb565b816015141561120757507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b29676109cb565b816016141561123757507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc34536109cb565b816017141561126757507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c486109cb565b816018141561129757507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd16109cb565b81601914156112c757507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c6109cb565b81601a14156112f757507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce996109cb565b81601b141561132757507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f3546109cb565b81601c141561135657507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d6109cb565b81601d141561138657507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f4276109cb565b81601e14156113b657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb6109cb565b81601f14156113e657507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc6109cb565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600254600160201b900463ffffffff1681565b8034146114f85760405162461bcd60e51b8152600401808060200182810382526030815260200180611bea6030913960400191505060405180910390fd5b61154f6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f000000000000000000000000000000000000000000000000000000000000000085900361186f565b8115611589576115896001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461186f565b8015611622576040516000906001600160a01b0386169083908381818185875af1925050503d80600081146115da576040519150601f19603f3d011682016040523d82523d6000602084013e6115df565b606091505b5050905080611620576040516001600160a01b0385169083156108fc029084906000818181858888f1935050505015801561161e573d6000803e3d6000fd5b505b505b50505050565b6002805460009163ffffffff600160201b9092048216917f0000000000000000000000000000000000000000000000000000000000000000811690910a168114156116a45760405162461bcd60e51b8152600401808060200182810382526030815260200180611cfc6030913960400191505060405180910390fd5b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1610156117755760018516611718578392506116f98163ffffffff16610dea565b63ffffffff821660009081526020819052604090208590559150611734565b63ffffffff811660009081526020819052604090205492508391505b61175f7f00000000000000000000000000000000000000000000000000000000000000008484610a09565b9350600263ffffffff86160494506001016116ab565b505060028054601e63ffffffff8083166001908101821692909206811663ffffffff199093168317845560009283526020829052604090922094909455815493860116600160201b0267ffffffff00000000199093169290921790915550909392505050565b34156118185760405162461bcd60e51b8152600401808060200182810382526030815260200180611ca26030913960400191505060405180910390fd5b61186d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633307f00000000000000000000000000000000000000000000000000000000000000006118c6565b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526118c190849061191c565b505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116229085905b6000611971826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119cd9092919063ffffffff16565b8051909150156118c15780806020019051602081101561199057600080fd5b50516118c15760405162461bcd60e51b815260040180806020018281038252602a815260200180611cd2602a913960400191505060405180910390fd5b60606119dc84846000856119e4565b949350505050565b606082471015611a255760405162461bcd60e51b8152600401808060200182810382526026815260200180611c1a6026913960400191505060405180910390fd5b611a2e85611b3f565b611a7f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611abd5780518252601f199092019160209182019101611a9e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611b1f576040519150601f19603f3d011682016040523d82523d6000602084013e611b24565b606091505b5091509150611b34828286611b45565b979650505050505050565b3b151590565b60608315611b54575081610bd0565b825115611b645782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bae578181015183820152602001611b96565b50505050905090810190601f168015611bdb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a2646970667358221220ffa6fe797fa50bc3d99f584f7f80e59d4c825b55f30a100cc3fa4055df87cb8564736f6c6343000706003364656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e20305f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f",
  "deployedBytecode": "0x6080604052600436106101355760003560e01c8063b214faa5116100ab578063e82955881161006f578063e8295588146104bc578063ec732959146104e6578063ed33639f146104fb578063f178e47c14610510578063fc0c546a1461053a578063fc7e9c6f1461054f57610135565b8063b214faa514610421578063ba70f7571461043e578063c2b40ae414610453578063cd87a3b41461047d578063e5285dcc1461049257610135565b80636d9833e3116100fd5780636d9833e314610299578063839df945146102c35780638bca6d16146102ed5780638ea3099e1461030257806390eeb02b146103415780639fa12d0b1461035657610135565b806317cc915c1461013a57806321a0adb6146101785780632b7ac3f314610213578063414a37ba146102445780634ecf518b1461026b575b600080fd5b34801561014657600080fd5b506101646004803603602081101561015d57600080fd5b5035610564565b604080519115158252519081900360200190f35b610211600480360360e081101561018e57600080fd5b810190602081018135600160201b8111156101a857600080fd5b8201836020820111156101ba57600080fd5b803590602001918460018302840111600160201b831117156101db57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a00135610579565b005b34801561021f57600080fd5b50610228610904565b604080516001600160a01b039092168252519081900360200190f35b34801561025057600080fd5b50610259610928565b60408051918252519081900360200190f35b34801561027757600080fd5b5061028061093a565b6040805163ffffffff9092168252519081900360200190f35b3480156102a557600080fd5b50610164600480360360208110156102bc57600080fd5b503561095e565b3480156102cf57600080fd5b50610164600480360360208110156102e657600080fd5b50356109d0565b3480156102f957600080fd5b506102596109e5565b34801561030e57600080fd5b506102596004803603606081101561032557600080fd5b506001600160a01b038135169060208101359060400135610a09565b34801561034d57600080fd5b50610280610bd7565b34801561036257600080fd5b506103d16004803603602081101561037957600080fd5b810190602081018135600160201b81111561039357600080fd5b8201836020820111156103a557600080fd5b803590602001918460208302840111600160201b831117156103c657600080fd5b509092509050610be3565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561040d5781810151838201526020016103f5565b505050509050019250505060405180910390f35b6102116004803603602081101561043757600080fd5b5035610c82565b34801561044a57600080fd5b50610259610da3565b34801561045f57600080fd5b506102596004803603602081101561047657600080fd5b5035610dbe565b34801561048957600080fd5b50610280610dd0565b34801561049e57600080fd5b50610164600480360360208110156104b557600080fd5b5035610dd5565b3480156104c857600080fd5b50610259600480360360208110156104df57600080fd5b5035610dea565b3480156104f257600080fd5b50610259611429565b34801561050757600080fd5b5061022861144d565b34801561051c57600080fd5b506102596004803603602081101561053357600080fd5b5035611471565b34801561054657600080fd5b50610228611483565b34801561055b57600080fd5b506102806114a7565b60046020526000908152604090205460ff1681565b600260035414156105d1576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026003557f000000000000000000000000000000000000000000000000000000000000000082111561064b576040805162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c7565000000000000604482015290519081900360640190fd5b60008581526004602052604090205460ff16156106af576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6106b88661095e565b610709576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663695ef6f989896040518060c001604052808b60001c81526020018a60001c8152602001896001600160a01b03168152602001886001600160a01b03168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b838110156107ba5781810151838201526020016107a2565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b505050506040513d602081101561083657600080fd5b5051610882576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6000858152600460205260409020805460ff191660011790556108a7848484846114ba565b604080516001600160a01b038681168252602082018890528183018590529151918516917fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c349319181900360600190a250506001600355505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080516020611c6183398151915281565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008161096d575060006109cb565b60025463ffffffff16805b63ffffffff81166000908152600160205260409020548414156109a0576001925050506109cb565b63ffffffff81166109af5750601e5b6000190163ffffffff8082169083161415610978576000925050505b919050565b60056020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600080516020611c618339815191528310610a6d576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020611c618339815191528210610ab95760405162461bcd60e51b8152600401808060200182810382526021815260200180611c406021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b158015610b0857600080fd5b505afa158015610b1c573d6000803e3d6000fd5b505050506040513d6040811015610b3257600080fd5b5080516020909101519092509050600080516020611c618339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610b9f57600080fd5b505afa158015610bb3573d6000803e3d6000fd5b505050506040513d6040811015610bc957600080fd5b5051925050505b9392505050565b60025463ffffffff1681565b60608167ffffffffffffffff81118015610bfc57600080fd5b50604051908082528060200260200182016040528015610c26578160200160208202803683370190505b50905060005b82811015610c7b57610c4f848483818110610c4357fe5b90506020020135610dd5565b15610c73576001828281518110610c6257fe5b911515602092830291909101909101525b600101610c2c565b5092915050565b60026003541415610cda576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260035560008181526005602052604090205460ff1615610d2d5760405162461bcd60e51b8152600401808060200182810382526021815260200180611c816021913960400191505060405180910390fd5b6000610d3882611628565b6000838152600560205260409020805460ff191660011790559050610d5b6117db565b6040805163ffffffff83168152426020820152815184927fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196928290030190a250506001600355565b60025463ffffffff1660009081526001602052604090205490565b60016020526000908152604090205481565b601e81565b60009081526004602052604090205460ff1690565b600081610e1857507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6109cb565b8160011415610e4857507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d6109cb565b8160021415610e7857507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c2006109cb565b8160031415610ea857507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb6109cb565b8160041415610ed857507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c96109cb565b8160051415610f0857507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb549596109cb565b8160061415610f3857507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c6109cb565b8160071415610f6857507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb46109cb565b8160081415610f9857507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff806109cb565b8160091415610fc757507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c0076109cb565b81600a1415610ff757507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e306109cb565b81600b141561102757507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e56109cb565b81600c141561105757507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f6109cb565b81600d141561108757507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd6109cb565b81600e14156110b757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb1086109cb565b81600f14156110e757507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b66109cb565b816010141561111757507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db618546109cb565b816011141561114757507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea6109cb565b816012141561117757507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d6109cb565b81601314156111a757507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc056109cb565b81601414156111d757507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d46109cb565b816015141561120757507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b29676109cb565b816016141561123757507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc34536109cb565b816017141561126757507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c486109cb565b816018141561129757507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd16109cb565b81601914156112c757507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c6109cb565b81601a14156112f757507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce996109cb565b81601b141561132757507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f3546109cb565b81601c141561135657507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d6109cb565b81601d141561138657507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f4276109cb565b81601e14156113b657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb6109cb565b81601f14156113e657507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc6109cb565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600254600160201b900463ffffffff1681565b8034146114f85760405162461bcd60e51b8152600401808060200182810382526030815260200180611bea6030913960400191505060405180910390fd5b61154f6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f000000000000000000000000000000000000000000000000000000000000000085900361186f565b8115611589576115896001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461186f565b8015611622576040516000906001600160a01b0386169083908381818185875af1925050503d80600081146115da576040519150601f19603f3d011682016040523d82523d6000602084013e6115df565b606091505b5050905080611620576040516001600160a01b0385169083156108fc029084906000818181858888f1935050505015801561161e573d6000803e3d6000fd5b505b505b50505050565b6002805460009163ffffffff600160201b9092048216917f0000000000000000000000000000000000000000000000000000000000000000811690910a168114156116a45760405162461bcd60e51b8152600401808060200182810382526030815260200180611cfc6030913960400191505060405180910390fd5b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1610156117755760018516611718578392506116f98163ffffffff16610dea565b63ffffffff821660009081526020819052604090208590559150611734565b63ffffffff811660009081526020819052604090205492508391505b61175f7f00000000000000000000000000000000000000000000000000000000000000008484610a09565b9350600263ffffffff86160494506001016116ab565b505060028054601e63ffffffff8083166001908101821692909206811663ffffffff199093168317845560009283526020829052604090922094909455815493860116600160201b0267ffffffff00000000199093169290921790915550909392505050565b34156118185760405162461bcd60e51b8152600401808060200182810382526030815260200180611ca26030913960400191505060405180910390fd5b61186d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633307f00000000000000000000000000000000000000000000000000000000000000006118c6565b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526118c190849061191c565b505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116229085905b6000611971826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119cd9092919063ffffffff16565b8051909150156118c15780806020019051602081101561199057600080fd5b50516118c15760405162461bcd60e51b815260040180806020018281038252602a815260200180611cd2602a913960400191505060405180910390fd5b60606119dc84846000856119e4565b949350505050565b606082471015611a255760405162461bcd60e51b8152600401808060200182810382526026815260200180611c1a6026913960400191505060405180910390fd5b611a2e85611b3f565b611a7f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611abd5780518252601f199092019160209182019101611a9e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611b1f576040519150601f19603f3d011682016040523d82523d6000602084013e611b24565b606091505b5091509150611b34828286611b45565b979650505050505050565b3b151590565b60608315611b54575081610bd0565b825115611b645782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bae578181015183820152602001611b96565b50505050905090810190601f168015611bdb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a2646970667358221220ffa6fe797fa50bc3d99f584f7f80e59d4c825b55f30a100cc3fa4055df87cb8564736f6c63430007060033",
  "immutableReferences": {
    "11": [
      {
        "length": 32,
        "start": 5253
      },
      {
        "length": 32,
        "start": 5381
      },
      {
        "length": 32,
        "start": 5474
      },
      {
        "length": 32,
        "start": 6181
      }
    ],
    "250": [
      {
        "length": 32,
        "start": 5199
      },
      {
        "length": 32,
        "start": 5945
      }
    ],
    "252": [
      {
        "length": 32,
        "start": 2364
      },
      {
        "length": 32,
        "start": 5697
      },
      {
        "length": 32,
        "start": 5805
      }
    ],
    "1064": [
      {
        "length": 32,
        "start": 1803
      },
      {
        "length": 32,
        "start": 2310
      }
    ],
    "1066": [
      {
        "length": 32,
        "start": 1496
      },
      {
        "length": 32,
        "start": 2535
      },
      {
        "length": 32,
        "start": 5416
      },
      {
        "length": 32,
        "start": 6217
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "962:1115:0:-:0;;;1759:34:2;;;-1:-1:-1;;;;;;1797:27:2;;;1063:225:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1063:225:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:11:2;;;1880:59;;;;-1:-1:-1;;;1880:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1963:2;1953:7;:12;;;1945:55;;;;;-1:-1:-1;;;1945:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2006:16:2;;;;;;;-1:-1:-1;;;;;;2028:16:2;;;;;;;2056:8;2051:80;2074:7;2070:11;;:1;:11;;;2051:80;;;2116:8;;;;:5;:8::i;:::-;2096:17;;;:14;:17;;;;;;;;;;:28;2083:3;;2051:80;;;-1:-1:-1;2148:18:2;;-1:-1:-1;;2154:11:2;;2148:18;:5;:18::i;:::-;2137:8;;;:5;:8;;;;;:29;;;;1760:7:17;:22;-1:-1:-1;;2022:17:8;2014:67:::1;;;;-1:-1:-1::0;;;2014:67:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;2087:20:8::1;::::0;;;;;::::1;::::0;2113:28:::1;::::0;;;;1269:14:0;;;;;;;::::1;::::0;-1:-1:-1;962:1115:0;;-1:-1:-1;;;;962:1115:0;4306:3478:2;4353:7;4372:6;4368:3411;;-1:-1:-1;4395:66:2;4380:82;;4368:3411;4477:1;4482;4477:6;4473:3306;;;-1:-1:-1;4500:66:2;4485:82;;4473:3306;4582:1;4587;4582:6;4578:3201;;;-1:-1:-1;4605:66:2;4590:82;;4578:3201;4687:1;4692;4687:6;4683:3096;;;-1:-1:-1;4710:66:2;4695:82;;4683:3096;4792:1;4797;4792:6;4788:2991;;;-1:-1:-1;4815:66:2;4800:82;;4788:2991;4897:1;4902;4897:6;4893:2886;;;-1:-1:-1;4920:66:2;4905:82;;4893:2886;5002:1;5007;5002:6;4998:2781;;;-1:-1:-1;5025:66:2;5010:82;;4998:2781;5107:1;5112;5107:6;5103:2676;;;-1:-1:-1;5130:66:2;5115:82;;5103:2676;5212:1;5217;5212:6;5208:2571;;;-1:-1:-1;5235:66:2;5220:82;;5208:2571;5317:1;5322;5317:6;5313:2466;;;-1:-1:-1;5340:66:2;5325:82;;5313:2466;5422:1;5427:2;5422:7;5418:2361;;;-1:-1:-1;5446:66:2;5431:82;;5418:2361;5528:1;5533:2;5528:7;5524:2255;;;-1:-1:-1;5552:66:2;5537:82;;5524:2255;5634:1;5639:2;5634:7;5630:2149;;;-1:-1:-1;5658:66:2;5643:82;;5630:2149;5740:1;5745:2;5740:7;5736:2043;;;-1:-1:-1;5764:66:2;5749:82;;5736:2043;5846:1;5851:2;5846:7;5842:1937;;;-1:-1:-1;5870:66:2;5855:82;;5842:1937;5952:1;5957:2;5952:7;5948:1831;;;-1:-1:-1;5976:66:2;5961:82;;5948:1831;6058:1;6063:2;6058:7;6054:1725;;;-1:-1:-1;6082:66:2;6067:82;;6054:1725;6164:1;6169:2;6164:7;6160:1619;;;-1:-1:-1;6188:66:2;6173:82;;6160:1619;6270:1;6275:2;6270:7;6266:1513;;;-1:-1:-1;6294:66:2;6279:82;;6266:1513;6376:1;6381:2;6376:7;6372:1407;;;-1:-1:-1;6400:66:2;6385:82;;6372:1407;6482:1;6487:2;6482:7;6478:1301;;;-1:-1:-1;6506:66:2;6491:82;;6478:1301;6588:1;6593:2;6588:7;6584:1195;;;-1:-1:-1;6612:66:2;6597:82;;6584:1195;6694:1;6699:2;6694:7;6690:1089;;;-1:-1:-1;6718:66:2;6703:82;;6690:1089;6800:1;6805:2;6800:7;6796:983;;;-1:-1:-1;6824:66:2;6809:82;;6796:983;6906:1;6911:2;6906:7;6902:877;;;-1:-1:-1;6930:66:2;6915:82;;6902:877;7012:1;7017:2;7012:7;7008:771;;;-1:-1:-1;7036:66:2;7021:82;;7008:771;7118:1;7123:2;7118:7;7114:665;;;-1:-1:-1;7142:66:2;7127:82;;7114:665;7224:1;7229:2;7224:7;7220:559;;;-1:-1:-1;7248:66:2;7233:82;;7220:559;7330:1;7335:2;7330:7;7326:453;;;-1:-1:-1;7354:66:2;7339:82;;7326:453;7436:1;7441:2;7436:7;7432:347;;;-1:-1:-1;7460:66:2;7445:82;;7432:347;7542:1;7547:2;7542:7;7538:241;;;-1:-1:-1;7566:66:2;7551:82;;7538:241;7648:1;7653:2;7648:7;7644:135;;;-1:-1:-1;7672:66:2;7657:82;;7644:135;7750:29;;;-1:-1:-1;;;7750:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;7644:135;4306:3478;;;:::o;962:1115:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "962:1115:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1192:47:8;;:::i;:::-;;;;;;;;;;;;;;;;;;3222:855;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3222:855:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3222:855:8;;;;;;;;;;;;-1:-1:-1;3222:855:8;-1:-1:-1;3222:855:8;;;;;;;;-1:-1:-1;;;;;3222:855:8;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1111:35;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1111:35:8;;;;;;;;;;;;;;978:114:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1289:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3687:394;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3687:394:2;;:::i;1334:43:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1334:43:8;;:::i;1150:37::-;;;;;;;;;;;;;:::i;2243:480:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2243:480:2;;;;;;;;;;;;;:::i;1759:34::-;;;;;;;;;;;;;:::i;4516:298:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4516:298:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4516:298:8;;;;;;;;;;-1:-1:-1;4516:298:8;;-1:-1:-1;4516:298:8;-1:-1:-1;4516:298:8;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2394:324;;;;;;;;;;;;;;;;-1:-1:-1;2394:324:8;;:::i;4127:94:2:-;;;;;;;;;;;;;:::i;1666:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1666:40:2;;:::i;1710:45::-;;;;;;;;;;;;;:::i;4338:117:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4338:117:8;;:::i;4306:3478:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4306:3478:2;;:::i;1096:114::-;;;;;;;;;;;;;:::i;1254:31::-;;;;;;;;;;;;;:::i;1613:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1613:49:2;;:::i;1029:29:0:-;;;;;;;;;;;;;:::i;1797:27:2:-;;;;;;;;;;;;;:::i;1192:47:8:-;;;;;;;;;;;;;;;:::o;3222:855::-;1688:1:17;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;3471:12:8::1;3463:20:::0;::::1;;3455:59;;;::::0;;-1:-1:-1;;;3455:59:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3529:31;::::0;;;:15:::1;:31;::::0;;;;;::::1;;3528:32;3520:76;;;::::0;;-1:-1:-1;;;3520:76:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3610:18;3622:5;3610:11;:18::i;:::-;3602:59;;;::::0;;-1:-1:-1;;;3602:59:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3715:8;-1:-1:-1::0;;;;;3715:20:8::1;;3745:6;;3715:150;;;;;;;;3770:5;3762:14;;3715:150;;;;3786:14;3778:23;;3715:150;;;;3811:10;-1:-1:-1::0;;;;;3803:19:8::1;3715:150;;;;3832:8;-1:-1:-1::0;;;;;3824:17:8::1;3715:150;;;;3843:4;3715:150;;;;3849:7;3715:150;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;3715:150:8;3700:203:::1;;;::::0;;-1:-1:-1;;;3700:203:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3700:203:8;;;;;;;;;;;;;::::1;;3910:31;::::0;;;:15:::1;:31;::::0;;;;:38;;-1:-1:-1;;3910:38:8::1;3944:4;3910:38;::::0;;3954:53:::1;3971:10:::0;3983:8;3993:4;3999:7;3954:16:::1;:53::i;:::-;4018:54;::::0;;-1:-1:-1;;;;;4018:54:8;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;-1:-1:-1::0;;1645:1:17;2580:7;:22;-1:-1:-1;;;;;;3222:855:8:o;1111:35::-;;;:::o;978:114:2:-;-1:-1:-1;;;;;;;;;;;978:114:2;:::o;1289:30::-;;;:::o;3687:394::-;3744:4;3760:10;3756:43;;-1:-1:-1;3787:5:2;3780:12;;3756:43;3831:16;;;;;3887:172;3911:8;;;;;;;:5;:8;;;;;;3902:17;;3898:53;;;3938:4;3931:11;;;;;;3898:53;3962:6;;;3958:52;;-1:-1:-1;1753:2:2;3958:52;-1:-1:-1;;4017:3:2;4035:22;;;;;;;;;3887:172;;4071:5;4064:12;;;;3687:394;;;;:::o;1334:43:8:-;;;;;;;;;;;;;;;:::o;1150:37::-;;;:::o;2243:480:2:-;2351:7;-1:-1:-1;;;;;;;;;;;2374:27:2;;2366:72;;;;;-1:-1:-1;;;2366:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2452:28:2;;2444:74;;;;-1:-1:-1;;;2444:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2584:24;;;-1:-1:-1;;;2584:24:2;;;;;;;;2524:9;2584:24;;;;;;;;2544:5;;2524:9;;-1:-1:-1;;;;;2584:18:2;;;;;:24;;;;;;;;;;:18;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2584:24:2;;;;;;;;;-1:-1:-1;2584:24:2;-1:-1:-1;;;;;;;;;;;;2636:6:2;2625:1;2618:38;2614:42;;2671:7;-1:-1:-1;;;;;2671:18:2;;2690:1;2693;2671:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2671:24:2;;-1:-1:-1;;;2243:480:2;;;;;;:::o;1759:34::-;;;;;;:::o;4516:298:8:-;4598:19;4644:16;4633:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4633:35:8;;4625:43;;4679:9;4674:136;4694:27;;;4674:136;;;4740:28;4748:16;;4765:1;4748:19;;;;;;;;;;;;;4740:7;:28::i;:::-;4736:68;;;4791:4;4780:5;4786:1;4780:8;;;;;;;;:15;;;:8;;;;;;;;;;;:15;4736:68;4723:3;;4674:136;;;;4516:298;;;;:::o;2394:324::-;1688:1:17;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;2477:24:8::1;::::0;;;:11:::1;:24;::::0;;;;;::::1;;2476:25;2468:71;;;;-1:-1:-1::0;;;2468:71:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2546:20;2569;2577:11;2569:7;:20::i;:::-;2595:24;::::0;;;:11:::1;:24;::::0;;;;:31;;-1:-1:-1;;2595:31:8::1;2622:4;2595:31;::::0;;2546:43;-1:-1:-1;2632:17:8::1;:15;:17::i;:::-;2661:52;::::0;;::::1;::::0;::::1;::::0;;2697:15:::1;2661:52;::::0;::::1;::::0;;;2669:11;;2661:52:::1;::::0;;;;;;::::1;-1:-1:-1::0;;1645:1:17;2580:7;:22;2394:324:8:o;4127:94:2:-;4199:16;;;;4171:7;4193:23;;;:5;:23;;;;;;4127:94;:::o;1666:40::-;;;;;;;;;;;;;:::o;1710:45::-;1753:2;1710:45;:::o;4338:117:8:-;4400:4;4419:31;;;:15;:31;;;;;;;;;4338:117::o;4306:3478:2:-;4353:7;4372:6;4368:3411;;-1:-1:-1;4395:66:2;4380:82;;4368:3411;4477:1;4482;4477:6;4473:3306;;;-1:-1:-1;4500:66:2;4485:82;;4473:3306;4582:1;4587;4582:6;4578:3201;;;-1:-1:-1;4605:66:2;4590:82;;4578:3201;4687:1;4692;4687:6;4683:3096;;;-1:-1:-1;4710:66:2;4695:82;;4683:3096;4792:1;4797;4792:6;4788:2991;;;-1:-1:-1;4815:66:2;4800:82;;4788:2991;4897:1;4902;4897:6;4893:2886;;;-1:-1:-1;4920:66:2;4905:82;;4893:2886;5002:1;5007;5002:6;4998:2781;;;-1:-1:-1;5025:66:2;5010:82;;4998:2781;5107:1;5112;5107:6;5103:2676;;;-1:-1:-1;5130:66:2;5115:82;;5103:2676;5212:1;5217;5212:6;5208:2571;;;-1:-1:-1;5235:66:2;5220:82;;5208:2571;5317:1;5322;5317:6;5313:2466;;;-1:-1:-1;5340:66:2;5325:82;;5313:2466;5422:1;5427:2;5422:7;5418:2361;;;-1:-1:-1;5446:66:2;5431:82;;5418:2361;5528:1;5533:2;5528:7;5524:2255;;;-1:-1:-1;5552:66:2;5537:82;;5524:2255;5634:1;5639:2;5634:7;5630:2149;;;-1:-1:-1;5658:66:2;5643:82;;5630:2149;5740:1;5745:2;5740:7;5736:2043;;;-1:-1:-1;5764:66:2;5749:82;;5736:2043;5846:1;5851:2;5846:7;5842:1937;;;-1:-1:-1;5870:66:2;5855:82;;5842:1937;5952:1;5957:2;5952:7;5948:1831;;;-1:-1:-1;5976:66:2;5961:82;;5948:1831;6058:1;6063:2;6058:7;6054:1725;;;-1:-1:-1;6082:66:2;6067:82;;6054:1725;6164:1;6169:2;6164:7;6160:1619;;;-1:-1:-1;6188:66:2;6173:82;;6160:1619;6270:1;6275:2;6270:7;6266:1513;;;-1:-1:-1;6294:66:2;6279:82;;6266:1513;6376:1;6381:2;6376:7;6372:1407;;;-1:-1:-1;6400:66:2;6385:82;;6372:1407;6482:1;6487:2;6482:7;6478:1301;;;-1:-1:-1;6506:66:2;6491:82;;6478:1301;6588:1;6593:2;6588:7;6584:1195;;;-1:-1:-1;6612:66:2;6597:82;;6584:1195;6694:1;6699:2;6694:7;6690:1089;;;-1:-1:-1;6718:66:2;6703:82;;6690:1089;6800:1;6805:2;6800:7;6796:983;;;-1:-1:-1;6824:66:2;6809:82;;6796:983;6906:1;6911:2;6906:7;6902:877;;;-1:-1:-1;6930:66:2;6915:82;;6902:877;7012:1;7017:2;7012:7;7008:771;;;-1:-1:-1;7036:66:2;7021:82;;7008:771;7118:1;7123:2;7118:7;7114:665;;;-1:-1:-1;7142:66:2;7127:82;;7114:665;7224:1;7229:2;7224:7;7220:559;;;-1:-1:-1;7248:66:2;7233:82;;7220:559;7330:1;7335:2;7330:7;7326:453;;;-1:-1:-1;7354:66:2;7339:82;;7326:453;7436:1;7441:2;7436:7;7432:347;;;-1:-1:-1;7460:66:2;7445:82;;7432:347;7542:1;7547:2;7542:7;7538:241;;;-1:-1:-1;7566:66:2;7551:82;;7538:241;7648:1;7653:2;7648:7;7644:135;;;-1:-1:-1;7672:66:2;7657:82;;7644:135;7750:29;;;-1:-1:-1;;;7750:29:2;;;;;;;;;;;;-1:-1:-1;;;7750:29:2;;;;;;;;;;;;;;1096:114;1133:77;1096:114;:::o;1254:31::-;;;:::o;1613:49::-;;;;;;;;;;;;;;:::o;1029:29:0:-;;;:::o;1797:27:2:-;;;-1:-1:-1;;;1797:27:2;;;;;:::o;1496:579:0:-;1672:7;1659:9;:20;1651:81;;;;-1:-1:-1;;;1651:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1739:51;-1:-1:-1;;;;;1739:5:0;:18;1758:10;1770:12;:19;;;1739:18;:51::i;:::-;1800:8;;1796:63;;1818:34;-1:-1:-1;;;;;1818:5:0;:18;1837:8;1847:4;1818:18;:34::i;:::-;1869:11;;1865:206;;1909:37;;1891:12;;-1:-1:-1;;;;;1909:15:0;;;1933:7;;1891:12;1909:37;1891:12;1909:37;1933:7;1909:15;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:56;;;1959:7;1954:111;;2030:26;;-1:-1:-1;;;;;2030:17:0;;;:26;;;;;2048:7;;2030:26;;;;2048:7;2030:17;:26;;;;;;;;;;;;;;;;;;;;;1954:111;1865:206;;1496:579;;;;:::o;2727:888:2:-;2817:9;;;2777:12;;2817:9;-1:-1:-1;;;2817:9:2;;;;;;2865:6;2854:17;;;;;2840:31;;;;2832:92;;;;-1:-1:-1;;;2832:92:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2952:10;2995:5;2930:19;;;3044:360;3067:6;3063:10;;:1;:10;;;3044:360;;;3092:16;;;3088:224;;3132:16;3125:23;;3166:8;3172:1;3166:8;;:5;:8::i;:::-;3184:17;;;:14;:17;;;;;;;;;;:36;;;3158:16;-1:-1:-1;3088:224:2;;;3252:17;;;:14;:17;;;;;;;;;;;;-1:-1:-1;3287:16:2;;-1:-1:-1;3088:224:2;3338:34;3352:6;3360:4;3366:5;3338:13;:34::i;:::-;3319:53;-1:-1:-1;3396:1:2;3380:17;;;;;-1:-1:-1;3075:3:2;;3044:360;;;-1:-1:-1;;3433:16:2;;;1753:2;3432:42;3433:16;;;;:20;;;3432:42;;;;;;3480:31;;-1:-1:-1;;3480:31:2;;;;;;;-1:-1:-1;3517:19:2;;;;;;;;;;;:38;;;;3561:26;;3573:14;;;3561:26;-1:-1:-1;;;3561:26:2;-1:-1:-1;;3561:26:2;;;;;;;;;;-1:-1:-1;3573:14:2;;;-1:-1:-1;;;2727:888:2:o;1292:200:0:-;1351:9;:14;1343:75;;;;-1:-1:-1;;;1343:75:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:63;-1:-1:-1;;;;;1424:5:0;:22;1447:10;1467:4;1474:12;1424:22;:63::i;:::-;1292:200::o;704:175:14:-;813:58;;;-1:-1:-1;;;;;813:58:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:14;-1:-1:-1;;;813:58:14;;;786:86;;806:5;;786:19;:86::i;:::-;704:175;;;:::o;885:203::-;1012:68;;;-1:-1:-1;;;;;1012:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:14;-1:-1:-1;;;1012:68:14;;;985:96;;1005:5;;2967:751;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:14;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:14;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:14;3616:85;;;;-1:-1:-1;;;3616:85:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:15;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;3581:193;-1:-1:-1;;;;3581:193:15:o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:15;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:15:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:15;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// https://tornado.cash\n/*\n * d888888P                                           dP              a88888b.                   dP\n *    88                                              88             d8'   `88                   88\n *    88    .d8888b. 88d888b. 88d888b. .d8888b. .d888b88 .d8888b.    88        .d8888b. .d8888b. 88d888b.\n *    88    88'  `88 88'  `88 88'  `88 88'  `88 88'  `88 88'  `88    88        88'  `88 Y8ooooo. 88'  `88\n *    88    88.  .88 88       88    88 88.  .88 88.  .88 88.  .88 dP Y8.   .88 88.  .88       88 88    88\n *    dP    `88888P' dP       dP    dP `88888P8 `88888P8 `88888P' 88  Y88888P' `88888P8 `88888P' dP    dP\n * ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n */\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./Tornado.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\ncontract ERC20Tornado is Tornado {\n  using SafeERC20 for IERC20;\n  IERC20 public immutable token;\n\n  constructor(\n    IVerifier _verifier,\n    IHasher _hasher,\n    uint256 _denomination,\n    uint32 _merkleTreeHeight,\n    IERC20 _token\n  ) Tornado(_verifier, _hasher, _denomination, _merkleTreeHeight) {\n    token = _token;\n  }\n\n  function _processDeposit() internal override {\n    require(msg.value == 0, \"ETH value is supposed to be 0 for ERC20 instance\");\n    token.safeTransferFrom(msg.sender, address(this), denomination);\n  }\n\n  function _processWithdraw(\n    address payable _recipient,\n    address payable _relayer,\n    uint256 _fee,\n    uint256 _refund\n  ) internal override {\n    require(msg.value == _refund, \"Incorrect refund amount received by the contract\");\n\n    token.safeTransfer(_recipient, denomination - _fee);\n    if (_fee > 0) {\n      token.safeTransfer(_relayer, _fee);\n    }\n\n    if (_refund > 0) {\n      (bool success, ) = _recipient.call{ value: _refund }(\"\");\n      if (!success) {\n        // let's return _refund back to the relayer\n        _relayer.transfer(_refund);\n      }\n    }\n  }\n}\n",
  "sourcePath": "/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/ERC20Tornado.sol",
  "ast": {
    "absolutePath": "/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/ERC20Tornado.sol",
    "exportedSymbols": {
      "Address": [
        3621
      ],
      "ERC20Tornado": [
        127
      ],
      "IERC20": [
        3112
      ],
      "IHasher": [
        242
      ],
      "IVerifier": [
        1058
      ],
      "MerkleTreeWithHistory": [
        897
      ],
      "ReentrancyGuard": [
        3684
      ],
      "SafeERC20": [
        3325
      ],
      "SafeMath": [
        2531
      ],
      "Tornado": [
        1329
      ]
    },
    "id": 128,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "795:23:0"
      },
      {
        "absolutePath": "/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/Tornado.sol",
        "file": "./Tornado.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 128,
        "sourceUnit": 1330,
        "src": "820:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 128,
        "sourceUnit": 3113,
        "src": "844:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 128,
        "sourceUnit": 3326,
        "src": "901:59:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Tornado",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1329,
              "src": "987:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tornado_$1329",
                "typeString": "contract Tornado"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "987:7:0"
          }
        ],
        "contractDependencies": [
          897,
          1329,
          3684
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 127,
        "linearizedBaseContracts": [
          127,
          1329,
          3684,
          897
        ],
        "name": "ERC20Tornado",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "id": 7,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3325,
              "src": "1005:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3325",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "999:27:0",
            "typeName": {
              "id": 8,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3112,
              "src": "1019:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3112",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 11,
            "mutability": "immutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 127,
            "src": "1029:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3112",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 10,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3112,
              "src": "1029:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3112",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "1263:25:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1269:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3112",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1277:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3112",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1269:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3112",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "1269:14:0"
                }
              ]
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1209:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1058",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "id": 25,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "1220:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$242",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "id": 26,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "1229:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 27,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "1244:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 28,
                "modifierName": {
                  "id": 23,
                  "name": "Tornado",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1329,
                  "src": "1201:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Tornado_$1329_$",
                    "typeString": "type(contract Tornado)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1201:61:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1080:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$1058",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1058,
                    "src": "1080:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1058",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1105:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$242",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 242,
                    "src": "1105:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$242",
                      "typeString": "contract IHasher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1126:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1153:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1183:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3112",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3112,
                    "src": "1183:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3112",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1074:126:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:0:0"
            },
            "scope": 127,
            "src": "1063:225:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1167
            ],
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "1337:155:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1351:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1351:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1364:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1351:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e6365",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1367:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        },
                        "value": "ETH value is supposed to be 0 for ERC20 instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        }
                      ],
                      "id": 39,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1343:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1447:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1447:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1467:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Tornado_$127",
                              "typeString": "contract ERC20Tornado"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Tornado_$127",
                              "typeString": "contract ERC20Tornado"
                            }
                          ],
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1459:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1459:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1459:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 56,
                        "name": "denomination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "1474:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1424:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3112",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3171,
                      "src": "1424:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3112_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3112_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:63:0"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 37,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1328:8:0"
            },
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:2:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1337:0:0"
            },
            "scope": 127,
            "src": "1292:200:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1269
            ],
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "1645:430:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 73,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1659:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1659:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 75,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "1672:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1659:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1681:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3189ced290ffd29dc422911cd3b29574f21c524c91f4b41e6abb0646c581cbff",
                          "typeString": "literal_string \"Incorrect refund amount received by the contract\""
                        },
                        "value": "Incorrect refund amount received by the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3189ced290ffd29dc422911cd3b29574f21c524c91f4b41e6abb0646c581cbff",
                          "typeString": "literal_string \"Incorrect refund amount received by the contract\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1651:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1758:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 84,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1066,
                          "src": "1770:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 85,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "1785:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1770:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1739:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3112",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3146,
                      "src": "1739:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3112_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3112_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1739:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:51:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1800:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1807:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1800:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "IfStatement",
                  "src": "1796:63:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1810:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 95,
                              "name": "_relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "1837:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 96,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "1847:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 92,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1818:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3112",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3146,
                            "src": "1818:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3112_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3112_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1818:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "1818:34:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1869:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1879:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1869:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 124,
                  "nodeType": "IfStatement",
                  "src": "1865:206:0",
                  "trueBody": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "1882:189:0",
                    "statements": [
                      {
                        "assignments": [
                          105,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 105,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 123,
                            "src": "1891:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 104,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1891:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 112,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1943:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 106,
                                "name": "_recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62,
                                "src": "1909:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1909:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 108,
                                "name": "_refund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1933:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1909:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1909:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1890:56:0"
                      },
                      {
                        "condition": {
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1958:8:0",
                          "subExpression": {
                            "id": 113,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "1959:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 122,
                        "nodeType": "IfStatement",
                        "src": "1954:111:0",
                        "trueBody": {
                          "id": 121,
                          "nodeType": "Block",
                          "src": "1968:97:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 118,
                                    "name": "_refund",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68,
                                    "src": "2048:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 115,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64,
                                    "src": "2030:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 117,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "2030:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2030:26:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 120,
                              "nodeType": "ExpressionStatement",
                              "src": "2030:26:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 70,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1636:8:0"
            },
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "1527:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "1559:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "1589:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1589:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "1607:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1521:105:0"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1645:0:0"
            },
            "scope": 127,
            "src": "1496:579:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 128,
        "src": "962:1115:0"
      }
    ],
    "src": "795:1283:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/ERC20Tornado.sol",
      "exportedSymbols": {
        "Address": [
          3621
        ],
        "ERC20Tornado": [
          127
        ],
        "IERC20": [
          3112
        ],
        "IHasher": [
          242
        ],
        "IVerifier": [
          1058
        ],
        "MerkleTreeWithHistory": [
          897
        ],
        "ReentrancyGuard": [
          3684
        ],
        "SafeERC20": [
          3325
        ],
        "SafeMath": [
          2531
        ],
        "Tornado": [
          1329
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "795:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 1330,
          "absolutePath": "/Users/sohamzemse/Workspace/Eth-Projects/ANON/anon-monorepo/packages/anon-core/contracts/Tornado.sol",
          "file": "./Tornado.sol",
          "scope": 128,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "820:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 3113,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 128,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "844:56:0"
      },
      {
        "attributes": {
          "SourceUnit": 3326,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "scope": 128,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "901:59:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            897,
            1329,
            3684
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            127,
            1329,
            3684,
            897
          ],
          "name": "ERC20Tornado",
          "scope": 128
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Tornado",
                  "referencedDeclaration": 1329,
                  "type": "contract Tornado"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
                "src": "987:7:0"
              }
            ],
            "id": 6,
            "name": "InheritanceSpecifier",
            "src": "987:7:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeERC20",
                  "referencedDeclaration": 3325,
                  "type": "library SafeERC20"
                },
                "id": 7,
                "name": "UserDefinedTypeName",
                "src": "1005:9:0"
              },
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 3112,
                  "type": "contract IERC20"
                },
                "id": 8,
                "name": "UserDefinedTypeName",
                "src": "1019:6:0"
              }
            ],
            "id": 9,
            "name": "UsingForDirective",
            "src": "999:27:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "fc0c546a",
              "mutability": "immutable",
              "name": "token",
              "scope": 127,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 3112,
                  "type": "contract IERC20"
                },
                "id": 10,
                "name": "UserDefinedTypeName",
                "src": "1029:6:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "1029:29:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 127,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_verifier",
                      "scope": 35,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IVerifier",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IVerifier",
                          "referencedDeclaration": 1058,
                          "type": "contract IVerifier"
                        },
                        "id": 12,
                        "name": "UserDefinedTypeName",
                        "src": "1080:9:0"
                      }
                    ],
                    "id": 13,
                    "name": "VariableDeclaration",
                    "src": "1080:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_hasher",
                      "scope": 35,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IHasher",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IHasher",
                          "referencedDeclaration": 242,
                          "type": "contract IHasher"
                        },
                        "id": 14,
                        "name": "UserDefinedTypeName",
                        "src": "1105:7:0"
                      }
                    ],
                    "id": 15,
                    "name": "VariableDeclaration",
                    "src": "1105:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_denomination",
                      "scope": 35,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 16,
                        "name": "ElementaryTypeName",
                        "src": "1126:7:0"
                      }
                    ],
                    "id": 17,
                    "name": "VariableDeclaration",
                    "src": "1126:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_merkleTreeHeight",
                      "scope": 35,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint32",
                          "type": "uint32"
                        },
                        "id": 18,
                        "name": "ElementaryTypeName",
                        "src": "1153:6:0"
                      }
                    ],
                    "id": 19,
                    "name": "VariableDeclaration",
                    "src": "1153:24:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_token",
                      "scope": 35,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IERC20",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IERC20",
                          "referencedDeclaration": 3112,
                          "type": "contract IERC20"
                        },
                        "id": 20,
                        "name": "UserDefinedTypeName",
                        "src": "1183:6:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "1183:13:0"
                  }
                ],
                "id": 22,
                "name": "ParameterList",
                "src": "1074:126:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 29,
                "name": "ParameterList",
                "src": "1263:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1329,
                      "type": "type(contract Tornado)",
                      "value": "Tornado"
                    },
                    "id": 23,
                    "name": "Identifier",
                    "src": "1201:7:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 13,
                      "type": "contract IVerifier",
                      "value": "_verifier"
                    },
                    "id": 24,
                    "name": "Identifier",
                    "src": "1209:9:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 15,
                      "type": "contract IHasher",
                      "value": "_hasher"
                    },
                    "id": 25,
                    "name": "Identifier",
                    "src": "1220:7:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 17,
                      "type": "uint256",
                      "value": "_denomination"
                    },
                    "id": 26,
                    "name": "Identifier",
                    "src": "1229:13:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 19,
                      "type": "uint32",
                      "value": "_merkleTreeHeight"
                    },
                    "id": 27,
                    "name": "Identifier",
                    "src": "1244:17:0"
                  }
                ],
                "id": 28,
                "name": "ModifierInvocation",
                "src": "1201:61:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11,
                              "type": "contract IERC20",
                              "value": "token"
                            },
                            "id": 30,
                            "name": "Identifier",
                            "src": "1269:5:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "contract IERC20",
                              "value": "_token"
                            },
                            "id": 31,
                            "name": "Identifier",
                            "src": "1277:6:0"
                          }
                        ],
                        "id": 32,
                        "name": "Assignment",
                        "src": "1269:14:0"
                      }
                    ],
                    "id": 33,
                    "name": "ExpressionStatement",
                    "src": "1269:14:0"
                  }
                ],
                "id": 34,
                "name": "Block",
                "src": "1263:25:0"
              }
            ],
            "id": 35,
            "name": "FunctionDefinition",
            "src": "1063:225:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                1167
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_processDeposit",
              "scope": 127,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 37,
                "name": "OverrideSpecifier",
                "src": "1328:8:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 36,
                "name": "ParameterList",
                "src": "1316:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 38,
                "name": "ParameterList",
                "src": "1337:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                                  "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 39,
                            "name": "Identifier",
                            "src": "1343:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 40,
                                    "name": "Identifier",
                                    "src": "1351:3:0"
                                  }
                                ],
                                "id": 41,
                                "name": "MemberAccess",
                                "src": "1351:9:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 42,
                                "name": "Literal",
                                "src": "1364:1:0"
                              }
                            ],
                            "id": 43,
                            "name": "BinaryOperation",
                            "src": "1351:14:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\"",
                              "value": "ETH value is supposed to be 0 for ERC20 instance"
                            },
                            "id": 44,
                            "name": "Literal",
                            "src": "1367:50:0"
                          }
                        ],
                        "id": 45,
                        "name": "FunctionCall",
                        "src": "1343:75:0"
                      }
                    ],
                    "id": 46,
                    "name": "ExpressionStatement",
                    "src": "1343:75:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransferFrom",
                              "referencedDeclaration": 3171,
                              "type": "function (contract IERC20,address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "contract IERC20",
                                  "value": "token"
                                },
                                "id": 47,
                                "name": "Identifier",
                                "src": "1424:5:0"
                              }
                            ],
                            "id": 49,
                            "name": "MemberAccess",
                            "src": "1424:22:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 50,
                                "name": "Identifier",
                                "src": "1447:3:0"
                              }
                            ],
                            "id": 51,
                            "name": "MemberAccess",
                            "src": "1447:10:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20Tornado_$127",
                                      "typeString": "contract ERC20Tornado"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 52,
                                    "name": "ElementaryTypeName",
                                    "src": "1459:7:0"
                                  }
                                ],
                                "id": 53,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1459:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract ERC20Tornado",
                                  "value": "this"
                                },
                                "id": 54,
                                "name": "Identifier",
                                "src": "1467:4:0"
                              }
                            ],
                            "id": 55,
                            "name": "FunctionCall",
                            "src": "1459:13:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1066,
                              "type": "uint256",
                              "value": "denomination"
                            },
                            "id": 56,
                            "name": "Identifier",
                            "src": "1474:12:0"
                          }
                        ],
                        "id": 57,
                        "name": "FunctionCall",
                        "src": "1424:63:0"
                      }
                    ],
                    "id": 58,
                    "name": "ExpressionStatement",
                    "src": "1424:63:0"
                  }
                ],
                "id": 59,
                "name": "Block",
                "src": "1337:155:0"
              }
            ],
            "id": 60,
            "name": "FunctionDefinition",
            "src": "1292:200:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                1269
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_processWithdraw",
              "scope": 127,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 70,
                "name": "OverrideSpecifier",
                "src": "1636:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_recipient",
                      "scope": 126,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 61,
                        "name": "ElementaryTypeName",
                        "src": "1527:15:0"
                      }
                    ],
                    "id": 62,
                    "name": "VariableDeclaration",
                    "src": "1527:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_relayer",
                      "scope": 126,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 63,
                        "name": "ElementaryTypeName",
                        "src": "1559:15:0"
                      }
                    ],
                    "id": 64,
                    "name": "VariableDeclaration",
                    "src": "1559:24:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_fee",
                      "scope": 126,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 65,
                        "name": "ElementaryTypeName",
                        "src": "1589:7:0"
                      }
                    ],
                    "id": 66,
                    "name": "VariableDeclaration",
                    "src": "1589:12:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_refund",
                      "scope": 126,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 67,
                        "name": "ElementaryTypeName",
                        "src": "1607:7:0"
                      }
                    ],
                    "id": 68,
                    "name": "VariableDeclaration",
                    "src": "1607:15:0"
                  }
                ],
                "id": 69,
                "name": "ParameterList",
                "src": "1521:105:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 71,
                "name": "ParameterList",
                "src": "1645:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3189ced290ffd29dc422911cd3b29574f21c524c91f4b41e6abb0646c581cbff",
                                  "typeString": "literal_string \"Incorrect refund amount received by the contract\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 72,
                            "name": "Identifier",
                            "src": "1651:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 73,
                                    "name": "Identifier",
                                    "src": "1659:3:0"
                                  }
                                ],
                                "id": 74,
                                "name": "MemberAccess",
                                "src": "1659:9:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 68,
                                  "type": "uint256",
                                  "value": "_refund"
                                },
                                "id": 75,
                                "name": "Identifier",
                                "src": "1672:7:0"
                              }
                            ],
                            "id": 76,
                            "name": "BinaryOperation",
                            "src": "1659:20:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Incorrect refund amount received by the contract\"",
                              "value": "Incorrect refund amount received by the contract"
                            },
                            "id": 77,
                            "name": "Literal",
                            "src": "1681:50:0"
                          }
                        ],
                        "id": 78,
                        "name": "FunctionCall",
                        "src": "1651:81:0"
                      }
                    ],
                    "id": 79,
                    "name": "ExpressionStatement",
                    "src": "1651:81:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransfer",
                              "referencedDeclaration": 3146,
                              "type": "function (contract IERC20,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "contract IERC20",
                                  "value": "token"
                                },
                                "id": 80,
                                "name": "Identifier",
                                "src": "1739:5:0"
                              }
                            ],
                            "id": 82,
                            "name": "MemberAccess",
                            "src": "1739:18:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 62,
                              "type": "address payable",
                              "value": "_recipient"
                            },
                            "id": 83,
                            "name": "Identifier",
                            "src": "1758:10:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "-",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1066,
                                  "type": "uint256",
                                  "value": "denomination"
                                },
                                "id": 84,
                                "name": "Identifier",
                                "src": "1770:12:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 66,
                                  "type": "uint256",
                                  "value": "_fee"
                                },
                                "id": 85,
                                "name": "Identifier",
                                "src": "1785:4:0"
                              }
                            ],
                            "id": 86,
                            "name": "BinaryOperation",
                            "src": "1770:19:0"
                          }
                        ],
                        "id": 87,
                        "name": "FunctionCall",
                        "src": "1739:51:0"
                      }
                    ],
                    "id": 88,
                    "name": "ExpressionStatement",
                    "src": "1739:51:0"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 66,
                              "type": "uint256",
                              "value": "_fee"
                            },
                            "id": 89,
                            "name": "Identifier",
                            "src": "1800:4:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 90,
                            "name": "Literal",
                            "src": "1807:1:0"
                          }
                        ],
                        "id": 91,
                        "name": "BinaryOperation",
                        "src": "1800:8:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "safeTransfer",
                                      "referencedDeclaration": 3146,
                                      "type": "function (contract IERC20,address,uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 11,
                                          "type": "contract IERC20",
                                          "value": "token"
                                        },
                                        "id": 92,
                                        "name": "Identifier",
                                        "src": "1818:5:0"
                                      }
                                    ],
                                    "id": 94,
                                    "name": "MemberAccess",
                                    "src": "1818:18:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 64,
                                      "type": "address payable",
                                      "value": "_relayer"
                                    },
                                    "id": 95,
                                    "name": "Identifier",
                                    "src": "1837:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 66,
                                      "type": "uint256",
                                      "value": "_fee"
                                    },
                                    "id": 96,
                                    "name": "Identifier",
                                    "src": "1847:4:0"
                                  }
                                ],
                                "id": 97,
                                "name": "FunctionCall",
                                "src": "1818:34:0"
                              }
                            ],
                            "id": 98,
                            "name": "ExpressionStatement",
                            "src": "1818:34:0"
                          }
                        ],
                        "id": 99,
                        "name": "Block",
                        "src": "1810:49:0"
                      }
                    ],
                    "id": 100,
                    "name": "IfStatement",
                    "src": "1796:63:0"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 68,
                              "type": "uint256",
                              "value": "_refund"
                            },
                            "id": 101,
                            "name": "Identifier",
                            "src": "1869:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 102,
                            "name": "Literal",
                            "src": "1879:1:0"
                          }
                        ],
                        "id": 103,
                        "name": "BinaryOperation",
                        "src": "1869:11:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                105,
                                null
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "scope": 123,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "bool",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "bool",
                                      "type": "bool"
                                    },
                                    "id": 104,
                                    "name": "ElementaryTypeName",
                                    "src": "1891:4:0"
                                  }
                                ],
                                "id": 105,
                                "name": "VariableDeclaration",
                                "src": "1891:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple(bool,bytes memory)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "names": [
                                        "value"
                                      ],
                                      "type": "function (bytes memory) payable returns (bool,bytes memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "call",
                                          "type": "function (bytes memory) payable returns (bool,bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 62,
                                              "type": "address payable",
                                              "value": "_recipient"
                                            },
                                            "id": 106,
                                            "name": "Identifier",
                                            "src": "1909:10:0"
                                          }
                                        ],
                                        "id": 107,
                                        "name": "MemberAccess",
                                        "src": "1909:15:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 68,
                                          "type": "uint256",
                                          "value": "_refund"
                                        },
                                        "id": 108,
                                        "name": "Identifier",
                                        "src": "1933:7:0"
                                      }
                                    ],
                                    "id": 109,
                                    "name": "FunctionCallOptions",
                                    "src": "1909:33:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "string",
                                      "type": "literal_string \"\"",
                                      "value": ""
                                    },
                                    "id": 110,
                                    "name": "Literal",
                                    "src": "1943:2:0"
                                  }
                                ],
                                "id": 111,
                                "name": "FunctionCall",
                                "src": "1909:37:0"
                              }
                            ],
                            "id": 112,
                            "name": "VariableDeclarationStatement",
                            "src": "1890:56:0"
                          },
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 105,
                                      "type": "bool",
                                      "value": "success"
                                    },
                                    "id": 113,
                                    "name": "Identifier",
                                    "src": "1959:7:0"
                                  }
                                ],
                                "id": 114,
                                "name": "UnaryOperation",
                                "src": "1958:8:0"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "transfer",
                                              "type": "function (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 64,
                                                  "type": "address payable",
                                                  "value": "_relayer"
                                                },
                                                "id": 115,
                                                "name": "Identifier",
                                                "src": "2030:8:0"
                                              }
                                            ],
                                            "id": 117,
                                            "name": "MemberAccess",
                                            "src": "2030:17:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 68,
                                              "type": "uint256",
                                              "value": "_refund"
                                            },
                                            "id": 118,
                                            "name": "Identifier",
                                            "src": "2048:7:0"
                                          }
                                        ],
                                        "id": 119,
                                        "name": "FunctionCall",
                                        "src": "2030:26:0"
                                      }
                                    ],
                                    "id": 120,
                                    "name": "ExpressionStatement",
                                    "src": "2030:26:0"
                                  }
                                ],
                                "id": 121,
                                "name": "Block",
                                "src": "1968:97:0"
                              }
                            ],
                            "id": 122,
                            "name": "IfStatement",
                            "src": "1954:111:0"
                          }
                        ],
                        "id": 123,
                        "name": "Block",
                        "src": "1882:189:0"
                      }
                    ],
                    "id": 124,
                    "name": "IfStatement",
                    "src": "1865:206:0"
                  }
                ],
                "id": 125,
                "name": "Block",
                "src": "1645:430:0"
              }
            ],
            "id": 126,
            "name": "FunctionDefinition",
            "src": "1496:579:0"
          }
        ],
        "id": 127,
        "name": "ContractDefinition",
        "src": "962:1115:0"
      }
    ],
    "id": 128,
    "name": "SourceUnit",
    "src": "795:1283:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-14T22:58:26.155Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(bytes32)": {
        "details": "Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.",
        "params": {
          "_commitment": "the note commitment, which is PedersenHash(nullifier + secret)"
        }
      },
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(address,bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)": {
        "details": "Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)"
      },
      "zeros(uint256)": {
        "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}